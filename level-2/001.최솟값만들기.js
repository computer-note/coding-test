//아이디어
//  A의 최대값과 B의 최소값을 곱한 값을 누적하면 문제에서 요구하는 최소 누적값을 구할 수 있을 것이다.

//아이디어 구현
//  A를 내림차순으로 정렬한다
//  B를 오름차순으로 정렬한다
//  배열의 길이만큼 루프를 돌면서 A[i]와 B[i]를 곱한 값을 누적한다
function solution(A, B) {
  A.sort((a, b) => a - b);
  B.sort((a, b) => b - a);

  let sum = 0;
  for (let i = 0; i < A.length; ++i) {
    sum += A[i] * B[i];
  }

  return sum;
}

/* 문제: 최솟값 만들기 (* 표시는 작성자 강조)
길이가 *같은* 배열 A, B 두개가 있습니다. 
각 배열은 자연수로 이루어져 있습니다. 배열 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱합니다. 
이러한 과정을 배열의 길이만큼 반복하며, 두 수를 곱한 값을 누적하여 더합니다. 
이때 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다. 
(단, 각 배열에서 k번째 숫자를 뽑았다면 다음에 k번째 숫자는 다시 뽑을 수 없습니다.)
배열 A, B가 주어질 때 최종적으로 누적된 최솟값을 return 하는 solution 함수를 완성해 주세요.
https://school.programmers.co.kr/learn/courses/30/lessons/12941
*/
